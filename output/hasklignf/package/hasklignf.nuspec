<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
	<metadata>
		<id>hasklignf</id>
		<version>2.1.0</version>
		<packageSourceUrl>https://github.com/FredHappyface/Choco.Packages/tree/master/hasklignf</packageSourceUrl>
		<owners>FredHappyface</owners>
		<title>HaskligNF</title>
		<authors>Adobe Systems Incorporated (http://www.adobe.com/), ryanoasis</authors>
		<projectUrl>https://github.com/ryanoasis/nerd-fonts/tree/ac5a5f0b591170dbecfcd503aa22a564cd88be1d/patched-fonts/Hasklig</projectUrl>
		<copyright>Adobe Systems Incorporated (http://www.adobe.com/),</copyright>
		<licenseUrl>https://github.com/ryanoasis/nerd-fonts/tree/ac5a5f0b591170dbecfcd503aa22a564cd88be1d/src/unpatched-fonts/Hasklig/LICENSE.txt</licenseUrl>
		<requireLicenseAcceptance>false</requireLicenseAcceptance>
		<iconUrl>https://raw.githack.com/FredHappyface/Choco.Packages/master/hasklignf/proj-icon.png</iconUrl>
		<tags>nerd font programming powerline octicons awesome hasklignf</tags>
		<docsUrl>https://github.com/ryanoasis/nerd-fonts/tree/ac5a5f0b591170dbecfcd503aa22a564cd88be1d/patched-fonts/Hasklig/readme.md</docsUrl>
		<bugTrackerUrl>https://github.com/tonsky/FiraCode/issues</bugTrackerUrl>
		<projectSourceUrl>https://github.com/ryanoasis/nerd-fonts/tree/ac5a5f0b591170dbecfcd503aa22a564cd88be1d/patched-fonts/Hasklig</projectSourceUrl>
		<summary># HaskligNF

Nerd Fonts patches developer targeted fonts with a high number of glyphs
(icons). Specifically to add a high number of extra glyphs from popular
&#x27;iconic fonts&#x27; such as
[Font Awesome](https://github.com/FortAwesome/Font-Awesome),
[Devicons](https://vorillaz.github.io/devicons/),
[Octicons](https://github.com/primer/octicons), and
[others](https://github.com/ryanoasis/nerd-fonts#glyph-sets).</summary>
		<description>
# HaskligNF

Nerd Fonts patches developer targeted fonts with a high number of glyphs
(icons). Specifically to add a high number of extra glyphs from popular
&#x27;iconic fonts&#x27; such as
[Font Awesome](https://github.com/FortAwesome/Font-Awesome),
[Devicons](https://vorillaz.github.io/devicons/),
[Octicons](https://github.com/primer/octicons), and
[others](https://github.com/ryanoasis/nerd-fonts#glyph-sets).

_N.B. This is a fork of the_ [Source Code Pro repository](https://github.com/adobe-fonts/source-code-pro)

### Hasklig – _Ligatures for code_

Programming languages are limited to relatively few characters. As a result, combined character operators surfaced quite early, such as the widely used arrow (`-&gt;`), comprised of a hyphen and greater sign. It looks like an arrow if you know the analogy and squint a bit.

Composite glyphs are problematic in languages such as Haskell which utilize these complicated operators (`=&gt;` `-&lt;` `&gt;&gt;=` etc.) extensively. The readability of such complex code improves with pretty printing. Academic articles featuring Haskell code often use [lhs2tex](https://www.andres-loeh.de/lhs2tex/) to achieve an appealing rendering, but it is of no use when programming.

Some Haskellers have resorted to Unicode symbols (`⇒`, `←` _etc._), which are valid in the &lt;span style=&quot;font-variant: small-caps&quot;&gt;ghc&lt;/span&gt;. However they are one-character-wide and therefore eye-strainingly small. Furthermore, when displayed as substitutes to the underlying multi-character representation, as [vim2hs] (https://github.com/dag/vim2hs) does, the characters go out of alignment.

Hasklig solves the problem the way typographers have always solved ill-fitting characters which co-occur often: [ligatures](https://en.wikipedia.org/wiki/Typographic_ligature). The underlying code stays the same — only the representation changes.

Not only can multi-character glyphs be rendered more vividly, other problematic things in monospaced fonts, such as spacing can be corrected.

[**Download Hasklig Font Family v1.1**](https://github.com/i-tu/Hasklig/releases/download/1.1/Hasklig-1.1.zip)

#### Hasklig
![Hasklig Sample](hasklig_example.png?raw=true)

#### Source Code Pro
![Source Code Pro Sample](SourceCodeProSample.png?raw=true)

### Release notes
+ [v1.1](https://github.com/i-tu/Hasklig/releases/tag/1.1)
    + New ligatures `-&gt;&gt;`, `:::`, `&gt;=&gt;`, `&lt;=&lt;`, `&lt;=&gt;`, `&lt;-&gt;`
    + Switched to newer version of calt code by [Nikita Prokopov](https://github.com/tonsky/FiraCode). It &quot;doesn’t apply ligatures to long sequences of chars, e.g. !!!!, &gt;&gt;&gt;&gt;, etc&quot;
    + Fixed `++` and `+++` line inconsistency in heavy italic weights
+ [v1.0](https://github.com/i-tu/Hasklig/releases/tag/1.0)
    + Updates to the latest version of SCP
    + Hasklig moves to a ligature substitution mechanism borrowed from the excellent [Fira Code by Nikita Prokopov](https://github.com/tonsky/FiraCode)
+ [v0.9]((https://github.com/i-tu/Hasklig/releases/download/0.9/Hasklig-0.9.zip)): 

...
		</description>
		<dependencies>
			<dependency id="chocolatey-font-helpers.extension" version="0.0.2" />
		</dependencies>
	</metadata>
	<files>
		<!-- this section controls what actually gets packaged into the Chocolatey package -->
		<file src="tools\**" target="tools" />
		<!--Building from Linux? You may need this instead: <file src="tools/**" target="tools" />-->
	</files>
</package>
